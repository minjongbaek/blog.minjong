---
import type { AstroComponentFactory } from "astro/dist/runtime/server";

const experienceType: { [index: string]: string } = {
  carrer: "경력",
  project: "프로젝트",
  activity: "활동",
  education: "교육",
};

interface Props {
  startDate: string;
  endDate?: string;
  period: string;
  type: "carrer" | "project" | "activity" | "education";
  Content: AstroComponentFactory;
  title: string;
  description: string;
  skills?: string[];
  github?: string;
  link?: string;
  isFirst: boolean;
}

const {
  title,
  startDate,
  endDate,
  period,
  type,
  description,
  skills,
  Content,
  github,
  link,
  isFirst,
} = Astro.props;
---

<div class="print-break">
  {
    isFirst && (
      <h2 class="text-2xl my-2 font-semibold pb-1 border-b">
        {experienceType[type]}
      </h2>
    )
  }
  <div class="flex gap-4">
    <div class="w-40 flex-shrink-0 text-md text-gray-600 space-y-1">
      <div>
        {startDate} ~ {endDate && endDate}
      </div>
      <div>{type === "education" ? "졸업" : period}</div>
      {
        github && (
          <a class="inline-block underline" href={github} target="_blank">
            GitHub 링크
          </a>
        )
      }
      {
        link && (
          <a class="inline-block underline" href={link} target="_blank">
            배포 링크
          </a>
        )
      }
    </div>
    <div class="space-y-2">
      <h3 class="text-xl font-semibold">{title}</h3>
      <p>{description}</p>
      <Content />
      {
        skills && (
          <div class="flex gap-1">
            {skills.map((skill) => (
              <span class="px-1 py-0.5 text-xs border border-slate-300 rounded-lg">
                {skill}
              </span>
            ))}
          </div>
        )
      }
    </div>
  </div>
</div>
